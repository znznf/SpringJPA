<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="SpringJPA">
<!--
	** persistence-unit : 
		* name : 용도에 맞게 지정 (default : 프로젝트명)   
		<persistence> 태그 내에 여러개의 <persistence-unit>를 포함할 수 있다.
		복수의 <persistence-unit> 을 사용하는 경우  DAO 에서 지정한다
		............... 
		@PersistenceContext(unitName ="teacher")
    	private EntityManager entityManager;
		............... 
 
	** persistence.xml
		: JPA 가 META-INF 폴더에서 자동으로 로딩.
		  META-INF/persistence.xml 위치 고정.  
	
		1. VO 지정  -->	
		<class>vo.BoardVO</class>
		<!-- 
		2. dialect(사투리,방언) 설정
			=> ORM 프레임웤의 가장큰 특징은 SQL 구문을 자동 생성 하는 것이고
			JPA 에서는 이를 위해 최적화된 SQL 을 제공하기 위해  
			DBMS 마다 Dialect 클래스를 제공함  **
			* Oracle 10g       org.hibernate.dialect.Oracle10gDialect  
			* Oracle 9i/10i    org.hibernate.dialect.Oracle9iDialect  
			* Oracle (모든 버전)  org.hibernate.dialect.OracleDialect  
			* MySQL 5.x        org.hibernate.dialect.MySQL5Dialect  
			* MySQL 4.x, 3.x   org.hibernate.dialect.MySQLDialect  
			* DB2              org.hibernate.dialect.DB2Dialect  
			* Sybase 11.9.2    org.hibernate.dialect.Sybase11Dialect  
			* Sybase Anywhere  org.hibernate.dialect.SybaseAnywhereDialect 
			-->	
			
		<properties> <!-- Hibernate의 설정정보 -->
			<!-- 2.1 필수 속성 : dialect 설정-->
			<property name="hibernate.dialect" value="org.hibernate.dialect.Oracle9iDialect"/>
			<!-- 2.2 옵션 속성  -->
			<property name="hibernate.show_sql" value="true"/>
							<!-- 생성된 SQL 콘솔 출력 -->
			<property name="hibernate.format_sql" value="true"/>
							<!-- SQL 출력시 일정 포맷으로 보기좋게 출력 -->
			<property name="hibernate.use_sql_comment" value="true"/>
							<!-- SQL에 포함된 주석도 같이 출력 -->
			<property name="hibernate.id.new_generator_mappings" value="true"/>
							<!-- key generation 을 사용한다 -->
			<property name="hibernate.hbm2ddl_auto" value="create"/>	
					<!-- hbm2ddl_auto 
					 => 애플리케이션실행시 create, update, delete 등
						DDL을 자동으로 처리 할지 여부 
						create : 기존 테이블 삭제후 생성 (drop-create)
						create-drop : drop-create-drop
						update : 기존 테이블 재사용 -->			
		</properties>
	</persistence-unit>
</persistence>
